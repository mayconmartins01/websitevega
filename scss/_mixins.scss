// _mixins.scss

@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-start {
    display: flex;
    justify-content: flex-start;
}

@mixin alig-start {
    display: flex;
    align-items: flex-start;
}

@mixin flex-space-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-space-evenly {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

@mixin flex-space-between-start {
    display: flex;
    justify-content: space-between;
}


@mixin flex-column {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

@mixin flex-row {
    display: flex;
    flex-direction: row;
}

@mixin flex-row-center {}

@mixin button-style($background, $hover-background: null) {
    display: inline-flex;
    padding: $spacing-xs $spacing-md;
    justify-content: center;
    align-items: center;
    gap: $spacing-md;
    color: $neutral-25;
    background: $background;
    transition: background-color $transition-default, color $transition-default;

    &:hover {
        @if $hover-background {
            background: $hover-background;
        }

        @else {
            opacity: 0.9;
        }
    }
}

@mixin typography($size, $weight: $font-weight-regular, $line-height: $line-height-default, $letter-spacing: 0) {
    font-family: $font-primary;
    font-size: $size;
    font-weight: $weight;
    line-height: $line-height;
    letter-spacing: $letter-spacing;
    font-style: normal;
}

@mixin spacing($padding: 0, $margin: 0, $gap: 50) {
    padding: $padding;
    margin: $margin;
    gap: $gap;
}

$breakpoints: (
    'ultra': 1440px,
    'laptop': 1200px,
    'tablet': 991px,
    'mobile': 560px
);

@mixin responsivo($breakpoint-name) {
    @if map-has-key($breakpoints, $breakpoint-name) {
        @media (max-width: map-get($breakpoints, $breakpoint-name)) {
            @content;
        }
    }

    @else {
        @warn "Este breakpoint que você definiu não existe"
    }
}